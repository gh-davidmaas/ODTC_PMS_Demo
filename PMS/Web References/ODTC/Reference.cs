//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PMS.ODTC {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_InhecoSiLAServiceProvider", Namespace="http://sila.coop")]
    public partial class InhecoSiLAServiceProvider : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AbortOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoContinueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceIdentificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitializeOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback PauseOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpenDoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseDoorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForInputOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrepareForOutputOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParametersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadActualTemperatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InhecoSiLAServiceProvider() {
            this.Url = global::PMS.Properties.Settings.Default.PMS_ODTC_InhecoSiLAServiceProvider;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AbortCompletedEventHandler AbortCompleted;
        
        /// <remarks/>
        public event DoContinueCompletedEventHandler DoContinueCompleted;
        
        /// <remarks/>
        public event GetDeviceIdentificationCompletedEventHandler GetDeviceIdentificationCompleted;
        
        /// <remarks/>
        public event GetStatusCompletedEventHandler GetStatusCompleted;
        
        /// <remarks/>
        public event InitializeCompletedEventHandler InitializeCompleted;
        
        /// <remarks/>
        public event LockDeviceCompletedEventHandler LockDeviceCompleted;
        
        /// <remarks/>
        public event PauseCompletedEventHandler PauseCompleted;
        
        /// <remarks/>
        public event ResetCompletedEventHandler ResetCompleted;
        
        /// <remarks/>
        public event UnlockDeviceCompletedEventHandler UnlockDeviceCompleted;
        
        /// <remarks/>
        public event OpenDoorCompletedEventHandler OpenDoorCompleted;
        
        /// <remarks/>
        public event CloseDoorCompletedEventHandler CloseDoorCompleted;
        
        /// <remarks/>
        public event ExecuteMethodCompletedEventHandler ExecuteMethodCompleted;
        
        /// <remarks/>
        public event StopMethodCompletedEventHandler StopMethodCompleted;
        
        /// <remarks/>
        public event PrepareForInputCompletedEventHandler PrepareForInputCompleted;
        
        /// <remarks/>
        public event PrepareForOutputCompletedEventHandler PrepareForOutputCompleted;
        
        /// <remarks/>
        public event SetConfigurationCompletedEventHandler SetConfigurationCompleted;
        
        /// <remarks/>
        public event GetConfigurationCompletedEventHandler GetConfigurationCompleted;
        
        /// <remarks/>
        public event SetParametersCompletedEventHandler SetParametersCompleted;
        
        /// <remarks/>
        public event GetParametersCompletedEventHandler GetParametersCompleted;
        
        /// <remarks/>
        public event ReadActualTemperatureCompletedEventHandler ReadActualTemperatureCompleted;
        
        /// <remarks/>
        public event GetLastDataCompletedEventHandler GetLastDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/Abort", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue Abort(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("Abort", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void AbortAsync(int requestId, string lockId) {
            this.AbortAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void AbortAsync(int requestId, string lockId, object userState) {
            if ((this.AbortOperationCompleted == null)) {
                this.AbortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAbortOperationCompleted);
            }
            this.InvokeAsync("Abort", new object[] {
                        requestId,
                        lockId}, this.AbortOperationCompleted, userState);
        }
        
        private void OnAbortOperationCompleted(object arg) {
            if ((this.AbortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AbortCompleted(this, new AbortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/DoContinue", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue DoContinue(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("DoContinue", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void DoContinueAsync(int requestId, string lockId) {
            this.DoContinueAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void DoContinueAsync(int requestId, string lockId, object userState) {
            if ((this.DoContinueOperationCompleted == null)) {
                this.DoContinueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoContinueOperationCompleted);
            }
            this.InvokeAsync("DoContinue", new object[] {
                        requestId,
                        lockId}, this.DoContinueOperationCompleted, userState);
        }
        
        private void OnDoContinueOperationCompleted(object arg) {
            if ((this.DoContinueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoContinueCompleted(this, new DoContinueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/GetDeviceIdentification", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue GetDeviceIdentification(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId, out SiLA_DeviceIdentification deviceDescription) {
            object[] results = this.Invoke("GetDeviceIdentification", new object[] {
                        requestId,
                        lockId});
            deviceDescription = ((SiLA_DeviceIdentification)(results[1]));
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceIdentificationAsync(int requestId, string lockId) {
            this.GetDeviceIdentificationAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void GetDeviceIdentificationAsync(int requestId, string lockId, object userState) {
            if ((this.GetDeviceIdentificationOperationCompleted == null)) {
                this.GetDeviceIdentificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceIdentificationOperationCompleted);
            }
            this.InvokeAsync("GetDeviceIdentification", new object[] {
                        requestId,
                        lockId}, this.GetDeviceIdentificationOperationCompleted, userState);
        }
        
        private void OnGetDeviceIdentificationOperationCompleted(object arg) {
            if ((this.GetDeviceIdentificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceIdentificationCompleted(this, new GetDeviceIdentificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/GetStatus", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue GetStatus(int requestId, out string deviceId, out State state, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] out CommandDescription[] subStates, out bool locked, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string PMSId, out System.DateTime currentTime) {
            object[] results = this.Invoke("GetStatus", new object[] {
                        requestId});
            deviceId = ((string)(results[1]));
            state = ((State)(results[2]));
            subStates = ((CommandDescription[])(results[3]));
            locked = ((bool)(results[4]));
            PMSId = ((string)(results[5]));
            currentTime = ((System.DateTime)(results[6]));
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusAsync(int requestId) {
            this.GetStatusAsync(requestId, null);
        }
        
        /// <remarks/>
        public void GetStatusAsync(int requestId, object userState) {
            if ((this.GetStatusOperationCompleted == null)) {
                this.GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusOperationCompleted);
            }
            this.InvokeAsync("GetStatus", new object[] {
                        requestId}, this.GetStatusOperationCompleted, userState);
        }
        
        private void OnGetStatusOperationCompleted(object arg) {
            if ((this.GetStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/Initialize", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue Initialize(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("Initialize", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void InitializeAsync(int requestId, string lockId) {
            this.InitializeAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void InitializeAsync(int requestId, string lockId, object userState) {
            if ((this.InitializeOperationCompleted == null)) {
                this.InitializeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializeOperationCompleted);
            }
            this.InvokeAsync("Initialize", new object[] {
                        requestId,
                        lockId}, this.InitializeOperationCompleted, userState);
        }
        
        private void OnInitializeOperationCompleted(object arg) {
            if ((this.InitializeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializeCompleted(this, new InitializeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/LockDevice", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue LockDevice(int requestId, string lockId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockTimeout, string eventReceiverURI, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PMSId) {
            object[] results = this.Invoke("LockDevice", new object[] {
                        requestId,
                        lockId,
                        lockTimeout,
                        eventReceiverURI,
                        PMSId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void LockDeviceAsync(int requestId, string lockId, string lockTimeout, string eventReceiverURI, string PMSId) {
            this.LockDeviceAsync(requestId, lockId, lockTimeout, eventReceiverURI, PMSId, null);
        }
        
        /// <remarks/>
        public void LockDeviceAsync(int requestId, string lockId, string lockTimeout, string eventReceiverURI, string PMSId, object userState) {
            if ((this.LockDeviceOperationCompleted == null)) {
                this.LockDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockDeviceOperationCompleted);
            }
            this.InvokeAsync("LockDevice", new object[] {
                        requestId,
                        lockId,
                        lockTimeout,
                        eventReceiverURI,
                        PMSId}, this.LockDeviceOperationCompleted, userState);
        }
        
        private void OnLockDeviceOperationCompleted(object arg) {
            if ((this.LockDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockDeviceCompleted(this, new LockDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/Pause", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue Pause(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("Pause", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void PauseAsync(int requestId, string lockId) {
            this.PauseAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void PauseAsync(int requestId, string lockId, object userState) {
            if ((this.PauseOperationCompleted == null)) {
                this.PauseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPauseOperationCompleted);
            }
            this.InvokeAsync("Pause", new object[] {
                        requestId,
                        lockId}, this.PauseOperationCompleted, userState);
        }
        
        private void OnPauseOperationCompleted(object arg) {
            if ((this.PauseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PauseCompleted(this, new PauseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/Reset", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue Reset(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId, string deviceId, string eventReceiverURI, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string PMSId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string errorHandlingTimeout, bool simulationMode) {
            object[] results = this.Invoke("Reset", new object[] {
                        requestId,
                        lockId,
                        deviceId,
                        eventReceiverURI,
                        PMSId,
                        errorHandlingTimeout,
                        simulationMode});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void ResetAsync(int requestId, string lockId, string deviceId, string eventReceiverURI, string PMSId, string errorHandlingTimeout, bool simulationMode) {
            this.ResetAsync(requestId, lockId, deviceId, eventReceiverURI, PMSId, errorHandlingTimeout, simulationMode, null);
        }
        
        /// <remarks/>
        public void ResetAsync(int requestId, string lockId, string deviceId, string eventReceiverURI, string PMSId, string errorHandlingTimeout, bool simulationMode, object userState) {
            if ((this.ResetOperationCompleted == null)) {
                this.ResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetOperationCompleted);
            }
            this.InvokeAsync("Reset", new object[] {
                        requestId,
                        lockId,
                        deviceId,
                        eventReceiverURI,
                        PMSId,
                        errorHandlingTimeout,
                        simulationMode}, this.ResetOperationCompleted, userState);
        }
        
        private void OnResetOperationCompleted(object arg) {
            if ((this.ResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetCompleted(this, new ResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/UnlockDevice", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue UnlockDevice(int requestId, string lockId) {
            object[] results = this.Invoke("UnlockDevice", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockDeviceAsync(int requestId, string lockId) {
            this.UnlockDeviceAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void UnlockDeviceAsync(int requestId, string lockId, object userState) {
            if ((this.UnlockDeviceOperationCompleted == null)) {
                this.UnlockDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockDeviceOperationCompleted);
            }
            this.InvokeAsync("UnlockDevice", new object[] {
                        requestId,
                        lockId}, this.UnlockDeviceOperationCompleted, userState);
        }
        
        private void OnUnlockDeviceOperationCompleted(object arg) {
            if ((this.UnlockDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockDeviceCompleted(this, new UnlockDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/OpenDoor", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue OpenDoor(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("OpenDoor", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void OpenDoorAsync(int requestId, string lockId) {
            this.OpenDoorAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void OpenDoorAsync(int requestId, string lockId, object userState) {
            if ((this.OpenDoorOperationCompleted == null)) {
                this.OpenDoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenDoorOperationCompleted);
            }
            this.InvokeAsync("OpenDoor", new object[] {
                        requestId,
                        lockId}, this.OpenDoorOperationCompleted, userState);
        }
        
        private void OnOpenDoorOperationCompleted(object arg) {
            if ((this.OpenDoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenDoorCompleted(this, new OpenDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/CloseDoor", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue CloseDoor(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("CloseDoor", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void CloseDoorAsync(int requestId, string lockId) {
            this.CloseDoorAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void CloseDoorAsync(int requestId, string lockId, object userState) {
            if ((this.CloseDoorOperationCompleted == null)) {
                this.CloseDoorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseDoorOperationCompleted);
            }
            this.InvokeAsync("CloseDoor", new object[] {
                        requestId,
                        lockId}, this.CloseDoorOperationCompleted, userState);
        }
        
        private void OnCloseDoorOperationCompleted(object arg) {
            if ((this.CloseDoorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseDoorCompleted(this, new CloseDoorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/ExecuteMethod", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue ExecuteMethod(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId, string methodName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> priority, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool prioritySpecified) {
            object[] results = this.Invoke("ExecuteMethod", new object[] {
                        requestId,
                        lockId,
                        methodName,
                        priority,
                        prioritySpecified});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteMethodAsync(int requestId, string lockId, string methodName, System.Nullable<int> priority, bool prioritySpecified) {
            this.ExecuteMethodAsync(requestId, lockId, methodName, priority, prioritySpecified, null);
        }
        
        /// <remarks/>
        public void ExecuteMethodAsync(int requestId, string lockId, string methodName, System.Nullable<int> priority, bool prioritySpecified, object userState) {
            if ((this.ExecuteMethodOperationCompleted == null)) {
                this.ExecuteMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteMethodOperationCompleted);
            }
            this.InvokeAsync("ExecuteMethod", new object[] {
                        requestId,
                        lockId,
                        methodName,
                        priority,
                        prioritySpecified}, this.ExecuteMethodOperationCompleted, userState);
        }
        
        private void OnExecuteMethodOperationCompleted(object arg) {
            if ((this.ExecuteMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteMethodCompleted(this, new ExecuteMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/StopMethod", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue StopMethod(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("StopMethod", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void StopMethodAsync(int requestId, string lockId) {
            this.StopMethodAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void StopMethodAsync(int requestId, string lockId, object userState) {
            if ((this.StopMethodOperationCompleted == null)) {
                this.StopMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopMethodOperationCompleted);
            }
            this.InvokeAsync("StopMethod", new object[] {
                        requestId,
                        lockId}, this.StopMethodOperationCompleted, userState);
        }
        
        private void OnStopMethodOperationCompleted(object arg) {
            if ((this.StopMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopMethodCompleted(this, new StopMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/PrepareForInput", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue PrepareForInput(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId, int position, [System.Xml.Serialization.XmlIgnoreAttribute()] bool positionSpecified) {
            object[] results = this.Invoke("PrepareForInput", new object[] {
                        requestId,
                        lockId,
                        position,
                        positionSpecified});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForInputAsync(int requestId, string lockId, int position, bool positionSpecified) {
            this.PrepareForInputAsync(requestId, lockId, position, positionSpecified, null);
        }
        
        /// <remarks/>
        public void PrepareForInputAsync(int requestId, string lockId, int position, bool positionSpecified, object userState) {
            if ((this.PrepareForInputOperationCompleted == null)) {
                this.PrepareForInputOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForInputOperationCompleted);
            }
            this.InvokeAsync("PrepareForInput", new object[] {
                        requestId,
                        lockId,
                        position,
                        positionSpecified}, this.PrepareForInputOperationCompleted, userState);
        }
        
        private void OnPrepareForInputOperationCompleted(object arg) {
            if ((this.PrepareForInputCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForInputCompleted(this, new PrepareForInputCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/PrepareForOutput", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue PrepareForOutput(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId, int position, [System.Xml.Serialization.XmlIgnoreAttribute()] bool positionSpecified) {
            object[] results = this.Invoke("PrepareForOutput", new object[] {
                        requestId,
                        lockId,
                        position,
                        positionSpecified});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void PrepareForOutputAsync(int requestId, string lockId, int position, bool positionSpecified) {
            this.PrepareForOutputAsync(requestId, lockId, position, positionSpecified, null);
        }
        
        /// <remarks/>
        public void PrepareForOutputAsync(int requestId, string lockId, int position, bool positionSpecified, object userState) {
            if ((this.PrepareForOutputOperationCompleted == null)) {
                this.PrepareForOutputOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrepareForOutputOperationCompleted);
            }
            this.InvokeAsync("PrepareForOutput", new object[] {
                        requestId,
                        lockId,
                        position,
                        positionSpecified}, this.PrepareForOutputOperationCompleted, userState);
        }
        
        private void OnPrepareForOutputOperationCompleted(object arg) {
            if ((this.PrepareForOutputCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrepareForOutputCompleted(this, new PrepareForOutputCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/SetConfiguration", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue SetConfiguration(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId, int configLevel, [System.Xml.Serialization.XmlIgnoreAttribute()] bool configLevelSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, string configXML) {
            object[] results = this.Invoke("SetConfiguration", new object[] {
                        requestId,
                        lockId,
                        configLevel,
                        configLevelSpecified,
                        password,
                        configXML});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void SetConfigurationAsync(int requestId, string lockId, int configLevel, bool configLevelSpecified, string password, string configXML) {
            this.SetConfigurationAsync(requestId, lockId, configLevel, configLevelSpecified, password, configXML, null);
        }
        
        /// <remarks/>
        public void SetConfigurationAsync(int requestId, string lockId, int configLevel, bool configLevelSpecified, string password, string configXML, object userState) {
            if ((this.SetConfigurationOperationCompleted == null)) {
                this.SetConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetConfigurationOperationCompleted);
            }
            this.InvokeAsync("SetConfiguration", new object[] {
                        requestId,
                        lockId,
                        configLevel,
                        configLevelSpecified,
                        password,
                        configXML}, this.SetConfigurationOperationCompleted, userState);
        }
        
        private void OnSetConfigurationOperationCompleted(object arg) {
            if ((this.SetConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetConfigurationCompleted(this, new SetConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/GetConfiguration", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue GetConfiguration(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId, int configLevel, [System.Xml.Serialization.XmlIgnoreAttribute()] bool configLevelSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("GetConfiguration", new object[] {
                        requestId,
                        lockId,
                        configLevel,
                        configLevelSpecified,
                        password});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationAsync(int requestId, string lockId, int configLevel, bool configLevelSpecified, string password) {
            this.GetConfigurationAsync(requestId, lockId, configLevel, configLevelSpecified, password, null);
        }
        
        /// <remarks/>
        public void GetConfigurationAsync(int requestId, string lockId, int configLevel, bool configLevelSpecified, string password, object userState) {
            if ((this.GetConfigurationOperationCompleted == null)) {
                this.GetConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetConfiguration", new object[] {
                        requestId,
                        lockId,
                        configLevel,
                        configLevelSpecified,
                        password}, this.GetConfigurationOperationCompleted, userState);
        }
        
        private void OnGetConfigurationOperationCompleted(object arg) {
            if ((this.GetConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationCompleted(this, new GetConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/SetParameters", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue SetParameters(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId, string paramsXML) {
            object[] results = this.Invoke("SetParameters", new object[] {
                        requestId,
                        lockId,
                        paramsXML});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void SetParametersAsync(int requestId, string lockId, string paramsXML) {
            this.SetParametersAsync(requestId, lockId, paramsXML, null);
        }
        
        /// <remarks/>
        public void SetParametersAsync(int requestId, string lockId, string paramsXML, object userState) {
            if ((this.SetParametersOperationCompleted == null)) {
                this.SetParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetParametersOperationCompleted);
            }
            this.InvokeAsync("SetParameters", new object[] {
                        requestId,
                        lockId,
                        paramsXML}, this.SetParametersOperationCompleted, userState);
        }
        
        private void OnSetParametersOperationCompleted(object arg) {
            if ((this.SetParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetParametersCompleted(this, new SetParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/GetParameters", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue GetParameters(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("GetParameters", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void GetParametersAsync(int requestId, string lockId) {
            this.GetParametersAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void GetParametersAsync(int requestId, string lockId, object userState) {
            if ((this.GetParametersOperationCompleted == null)) {
                this.GetParametersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParametersOperationCompleted);
            }
            this.InvokeAsync("GetParameters", new object[] {
                        requestId,
                        lockId}, this.GetParametersOperationCompleted, userState);
        }
        
        private void OnGetParametersOperationCompleted(object arg) {
            if ((this.GetParametersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParametersCompleted(this, new GetParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/ReadActualTemperature", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue ReadActualTemperature(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("ReadActualTemperature", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void ReadActualTemperatureAsync(int requestId, string lockId) {
            this.ReadActualTemperatureAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void ReadActualTemperatureAsync(int requestId, string lockId, object userState) {
            if ((this.ReadActualTemperatureOperationCompleted == null)) {
                this.ReadActualTemperatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadActualTemperatureOperationCompleted);
            }
            this.InvokeAsync("ReadActualTemperature", new object[] {
                        requestId,
                        lockId}, this.ReadActualTemperatureOperationCompleted, userState);
        }
        
        private void OnReadActualTemperatureOperationCompleted(object arg) {
            if ((this.ReadActualTemperatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadActualTemperatureCompleted(this, new ReadActualTemperatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sila.coop/GetLastData", RequestNamespace="http://sila.coop", ResponseNamespace="http://sila.coop", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiLAReturnValue GetLastData(int requestId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lockId) {
            object[] results = this.Invoke("GetLastData", new object[] {
                        requestId,
                        lockId});
            return ((SiLAReturnValue)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastDataAsync(int requestId, string lockId) {
            this.GetLastDataAsync(requestId, lockId, null);
        }
        
        /// <remarks/>
        public void GetLastDataAsync(int requestId, string lockId, object userState) {
            if ((this.GetLastDataOperationCompleted == null)) {
                this.GetLastDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastDataOperationCompleted);
            }
            this.InvokeAsync("GetLastData", new object[] {
                        requestId,
                        lockId}, this.GetLastDataOperationCompleted, userState);
        }
        
        private void OnGetLastDataOperationCompleted(object arg) {
            if ((this.GetLastDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastDataCompleted(this, new GetLastDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sila.coop")]
    public partial class SiLAReturnValue {
        
        private int returnCodeField;
        
        private string messageField;
        
        private string durationField;
        
        private int deviceClassField;
        
        /// <remarks/>
        public int returnCode {
            get {
                return this.returnCodeField;
            }
            set {
                this.returnCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public int deviceClass {
            get {
                return this.deviceClassField;
            }
            set {
                this.deviceClassField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sila.coop")]
    public partial class CommandDescription {
        
        private int requestIdField;
        
        private string commandNameField;
        
        private System.Nullable<int> queuePositionField;
        
        private bool queuePositionFieldSpecified;
        
        private System.Nullable<System.DateTime> startedAtField;
        
        private bool startedAtFieldSpecified;
        
        private System.Nullable<SubState> currentStateField;
        
        private bool currentStateFieldSpecified;
        
        private System.Nullable<int> dataWaitingField;
        
        private bool dataWaitingFieldSpecified;
        
        /// <remarks/>
        public int requestId {
            get {
                return this.requestIdField;
            }
            set {
                this.requestIdField = value;
            }
        }
        
        /// <remarks/>
        public string commandName {
            get {
                return this.commandNameField;
            }
            set {
                this.commandNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> queuePosition {
            get {
                return this.queuePositionField;
            }
            set {
                this.queuePositionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool queuePositionSpecified {
            get {
                return this.queuePositionFieldSpecified;
            }
            set {
                this.queuePositionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startedAt {
            get {
                return this.startedAtField;
            }
            set {
                this.startedAtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startedAtSpecified {
            get {
                return this.startedAtFieldSpecified;
            }
            set {
                this.startedAtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SubState> currentState {
            get {
                return this.currentStateField;
            }
            set {
                this.currentStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool currentStateSpecified {
            get {
                return this.currentStateFieldSpecified;
            }
            set {
                this.currentStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> dataWaiting {
            get {
                return this.dataWaitingField;
            }
            set {
                this.dataWaitingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dataWaitingSpecified {
            get {
                return this.dataWaitingFieldSpecified;
            }
            set {
                this.dataWaitingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sila.coop")]
    public enum SubState {
        
        /// <remarks/>
        asynchPaused,
        
        /// <remarks/>
        pauseRequested,
        
        /// <remarks/>
        processing,
        
        /// <remarks/>
        responseWaiting,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sila.coop")]
    public partial class SiLA_DeviceIdentification {
        
        private string wsdlField;
        
        private string siLAInterfaceVersionField;
        
        private int siLADeviceClassField;
        
        private string siLADeviceClassVersionField;
        
        private int[] siLASubDeviceClassField;
        
        private string deviceManufacturerField;
        
        private string deviceNameField;
        
        private string deviceSerialNumberField;
        
        private string deviceFirmwareVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Wsdl {
            get {
                return this.wsdlField;
            }
            set {
                this.wsdlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SiLAInterfaceVersion {
            get {
                return this.siLAInterfaceVersionField;
            }
            set {
                this.siLAInterfaceVersionField = value;
            }
        }
        
        /// <remarks/>
        public int SiLADeviceClass {
            get {
                return this.siLADeviceClassField;
            }
            set {
                this.siLADeviceClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SiLADeviceClassVersion {
            get {
                return this.siLADeviceClassVersionField;
            }
            set {
                this.siLADeviceClassVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public int[] SiLASubDeviceClass {
            get {
                return this.siLASubDeviceClassField;
            }
            set {
                this.siLASubDeviceClassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeviceManufacturer {
            get {
                return this.deviceManufacturerField;
            }
            set {
                this.deviceManufacturerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeviceSerialNumber {
            get {
                return this.deviceSerialNumberField;
            }
            set {
                this.deviceSerialNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeviceFirmwareVersion {
            get {
                return this.deviceFirmwareVersionField;
            }
            set {
                this.deviceFirmwareVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sila.coop")]
    public enum State {
        
        /// <remarks/>
        startup,
        
        /// <remarks/>
        resetting,
        
        /// <remarks/>
        standby,
        
        /// <remarks/>
        initializing,
        
        /// <remarks/>
        idle,
        
        /// <remarks/>
        busy,
        
        /// <remarks/>
        paused,
        
        /// <remarks/>
        errorHandling,
        
        /// <remarks/>
        inError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AbortCompletedEventHandler(object sender, AbortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AbortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AbortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DoContinueCompletedEventHandler(object sender, DoContinueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoContinueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoContinueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetDeviceIdentificationCompletedEventHandler(object sender, GetDeviceIdentificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceIdentificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceIdentificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SiLA_DeviceIdentification deviceDescription {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLA_DeviceIdentification)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetStatusCompletedEventHandler(object sender, GetStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string deviceId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public State state {
            get {
                this.RaiseExceptionIfNecessary();
                return ((State)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public CommandDescription[] subStates {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommandDescription[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public bool locked {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string PMSId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public System.DateTime currentTime {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InitializeCompletedEventHandler(object sender, InitializeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitializeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LockDeviceCompletedEventHandler(object sender, LockDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PauseCompletedEventHandler(object sender, PauseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PauseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PauseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ResetCompletedEventHandler(object sender, ResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UnlockDeviceCompletedEventHandler(object sender, UnlockDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void OpenDoorCompletedEventHandler(object sender, OpenDoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenDoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpenDoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseDoorCompletedEventHandler(object sender, CloseDoorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseDoorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseDoorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ExecuteMethodCompletedEventHandler(object sender, ExecuteMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void StopMethodCompletedEventHandler(object sender, StopMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StopMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StopMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PrepareForInputCompletedEventHandler(object sender, PrepareForInputCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForInputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForInputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PrepareForOutputCompletedEventHandler(object sender, PrepareForOutputCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrepareForOutputCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrepareForOutputCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetConfigurationCompletedEventHandler(object sender, SetConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetConfigurationCompletedEventHandler(object sender, GetConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetParametersCompletedEventHandler(object sender, SetParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetParametersCompletedEventHandler(object sender, GetParametersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParametersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParametersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReadActualTemperatureCompletedEventHandler(object sender, ReadActualTemperatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadActualTemperatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadActualTemperatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLastDataCompletedEventHandler(object sender, GetLastDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiLAReturnValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiLAReturnValue)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591